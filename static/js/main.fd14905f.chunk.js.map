{"version":3,"sources":["store/actions/board.actions.js","store/reducers/board.reducers.js","BoardDispatchContext.js","components/Card/Card.js","components/AddNoteForm/AddNoteForm.js","components/Column/Column.js","components/Board/Board.js","hooks/useLocalStorageReducer.js","App.js","registerServiceWorker.js","index.js"],"names":["nextTodoId","addColumn","text","type","id","removeColumn","columnId","toggleColumnInput","addItemToColum","item","transfer","moveItem","payload","dragIndex","hoverIndex","state","latestId","columns","createColumn","name","items","title","timeAdded","Date","toDateString","completed","showAddCardInput","boardReducer","action","filter","column","map","newLatestItemId","info","itemId","temp","BoardDispatch","React","createContext","cardSource","beginDrag","props","index","cardTarget","hover","monitor","component","getItem","hoverBoundingRect","findDOMNode","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","moveCard","DropTarget","connect","connectDropTarget","dropTarget","DragSource","connectDragSource","dragSource","isDragging","style","opacity","cursor","className","tabIndex","href","AddNoteForm","useState","cardTitle","setCardTitle","dispatch","useContext","value","onChange","e","target","handleChange","placeholder","minHeight","onClick","boardTarget","drop","isOver","key","maxWidth","length","Board","reducer","localStorageState","localStorage","JSON","parse","useReducer","reducerState","useEffect","setItem","stringify","useLocalStorageReducer","initialState","board","cols","Provider","addColumnAction","App","padding","Component","DragDropContext","HTML5Backend","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fd14905f.chunk.js","sourcesContent":["let nextTodoId = 777;\n\nexport const addColumn = text => ({\n  type: \"ADD_COLUMN\",\n  id: nextTodoId++,\n  text\n});\n\nexport const removeColumn = columnId => ({\n  type: \"REMOVE_COLUMN\",\n  id: columnId\n});\n\nexport const toggleColumnInput = columnId => ({\n  type: \"TOGGLE_COLUMN_INPUT\",\n  id: columnId\n});\n\nexport const addItemToColum = item => ({\n  type: \"ADD_ITEM_TO_COLUMN\",\n  transfer: item.transfer || false,\n  item\n});\n\nexport const removeItemFromColumn = info => ({\n  type: \"REMOVE_ITEM_FROM_COLUMN\",\n  id: info.columnId,\n  transfer: info.transfer || false,\n  info\n});\n\nexport const moveItem = payload => ({\n  type: \"MOVE_ITEM\",\n  dragIndex: payload.dragIndex,\n  hoverIndex: payload.hoverIndex,\n  columnId: payload.columnId\n});\n","export const state = {\n  latestId: 2,\n  columns: [\n    createColumn({ id: 0, name: \"Todo\" }),\n    createColumn({ id: 1, name: \"Done\" })\n  ]\n};\n\nfunction createColumn({ id, name }) {\n  return {\n    id,\n    name,\n    items:\n      name === \"Todo\"\n        ? [\n            {\n              id: 0,\n              title: \"Read a Book\",\n              columnId: 0,\n              timeAdded: new Date().toDateString()\n            },\n            {\n              id: 1,\n              title: \"Build a House\",\n              columnId: 0,\n              timeAdded: new Date().toDateString()\n            },\n            {\n              id: 2,\n              title: \"Create new Card\",\n              columnId: 0,\n              timeAdded: new Date().toDateString()\n            }\n          ]\n        : [],\n    completed: false,\n    showAddCardInput: false\n  };\n}\n\nconst boardReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_COLUMN\":\n      return {\n        ...state,\n        columns: [\n          ...state.columns,\n          {\n            latestId: 0,\n            id: action.id,\n            name: action.text,\n            items: [],\n            completed: false,\n            showAddCardInput: false\n          }\n        ]\n      };\n    case \"REMOVE_COLUMN\":\n      return {\n        ...state,\n        columns: state.columns.filter(column => column.id !== action.id)\n      };\n    case \"TOGGLE_COLUMN_INPUT\":\n      return {\n        ...state,\n        columns: state.columns.map(column => {\n          if (column.id === action.id) {\n            column.showAddCardInput = !column.showAddCardInput;\n          }\n          return column;\n        })\n      };\n    case \"ADD_ITEM_TO_COLUMN\":\n      const newLatestItemId = state.latestId + 1;\n      return {\n        ...state,\n        latestId: action.transfer ? state.latestId : newLatestItemId,\n        columns: state.columns.map(column => {\n          if (column.id === action.item.columnId) {\n            column.items = [\n              {\n                id: action.transfer ? action.item.id : newLatestItemId,\n                title: action.item.title,\n                columnId: action.item.columnId,\n                timeAdded: new Date().toDateString()\n              },\n              ...column.items\n            ];\n          }\n          return column;\n        })\n      };\n    case \"REMOVE_ITEM_FROM_COLUMN\":\n      return {\n        ...state,\n        columns: state.columns.map(column => {\n          if (column.id === action.info.columnId) {\n            column.items = column.items.filter(\n              item => item.id !== action.info.itemId\n            );\n          }\n          return column;\n        })\n      };\n    case \"MOVE_ITEM\":\n      return {\n        ...state,\n        columns: state.columns.map(column => {\n          if (column.id === action.columnId) {\n            const { dragIndex, hoverIndex } = action;\n            const temp = column.items[dragIndex];\n            if (temp) {\n              column.items[dragIndex] = column.items[hoverIndex];\n              column.items[hoverIndex] = temp;\n            }\n          }\n          return column;\n        })\n      };\n    default:\n      return state;\n  }\n};\n\nexport default boardReducer;\n","import React from \"react\";\n\nexport const BoardDispatch = React.createContext(null);\n","import React from \"react\";\nimport { findDOMNode } from \"react-dom\";\nimport { DragSource, DropTarget } from \"react-dnd\";\n\nimport \"./Card.css\";\n\nfunction BoardCard(props) {\n  const { isDragging, connectDragSource, connectDropTarget } = props;\n\n  return connectDragSource(\n    connectDropTarget(\n      <div\n        style={{\n          opacity: isDragging ? 0.2 : 1,\n          cursor: \"move\"\n        }}\n      >\n        <div className=\"card\" tabIndex=\"1\">\n          <div>\n            <div className=\"card__label\">{props.item.title}</div>\n            <span className=\"card__meta\">\n              <a className=\"card__meta__link\" href={props.item.id}>\n                #{props.item.id}\n              </a>{\" \"}\n              {props.item.timeAdded}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  );\n}\n\nconst cardSource = {\n  beginDrag(props) {\n    return {\n      index: props.index,\n      ...props.item\n    };\n  }\n};\n\nconst cardTarget = {\n  hover(props, monitor, component) {\n    if (!component) {\n      return null;\n    }\n\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    const hoverBoundingRect = findDOMNode(component).getBoundingClientRect();\n    const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n    const clientOffset = monitor.getClientOffset();\n    const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n\n    if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n      return;\n    }\n\n    if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n      return;\n    }\n\n    const item = monitor.getItem();\n    // TODO: allow sorting in other columns\n    if (item.columnId === props.item.columnId) {\n      props.moveCard(dragIndex, hoverIndex);\n      monitor.getItem().index = hoverIndex;\n    }\n  }\n};\n\nexport default DropTarget(\"Card\", cardTarget, connect => ({\n  connectDropTarget: connect.dropTarget()\n}))(\n  DragSource(\"Card\", cardSource, (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  }))(BoardCard)\n);\n","import React, { useState, useContext } from \"react\";\nimport { BoardDispatch } from \"../../BoardDispatchContext\";\nimport {\n  addItemToColum,\n  toggleColumnInput\n} from \"../../store/actions/board.actions\";\n\nimport \"./AddNoteForm.css\";\n\nexport const AddNoteForm = ({ column }) => {\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const dispatch = useContext(BoardDispatch);\n\n  const addCard = (columnId, title) => {\n    dispatch(addItemToColum({ columnId: columnId, title }));\n    setCardTitle(\"\");\n  };\n\n  const toggleAddCardInput = columnId => {\n    dispatch(toggleColumnInput(columnId));\n  };\n\n  const handleChange = e => {\n    setCardTitle(e.target.value);\n  };\n\n  return (\n    <div className=\"note__form\">\n      <textarea\n        className=\"note__form__textarea\"\n        name=\"cardTitle\"\n        value={cardTitle}\n        onChange={e => handleChange(e)}\n        placeholder=\"Enter a note\"\n        style={{ minHeight: 76 }}\n      />\n      <div className=\"button__group\">\n        <button\n          className=\"button button--primary\"\n          onClick={() => addCard(column.id, cardTitle)}\n        >\n          Add\n        </button>\n        <button\n          className=\"button button--neutral\"\n          onClick={() => toggleAddCardInput(column.id)}\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport BoardCard from \"../Card/Card\";\nimport {\n  addItemToColum,\n  removeColumn,\n  removeItemFromColumn,\n  toggleColumnInput,\n  moveItem\n} from \"../../store/actions/board.actions\";\nimport { DropTarget } from \"react-dnd\";\nimport { AddNoteForm } from \"../AddNoteForm/AddNoteForm\";\nimport \"./Column.css\";\n\nfunction Column(props) {\n  const { connectDropTarget, column, dispatch } = props;\n\n  const toggleAddCardInput = columnId => {\n    dispatch(toggleColumnInput(columnId));\n  };\n\n  const moveCard = (dragIndex, hoverIndex) => {\n    dispatch(\n      moveItem({\n        dragIndex,\n        hoverIndex,\n        columnId: column.id\n      })\n    );\n  };\n\n  const items = column.items.map((item, index) => (\n    <BoardCard key={item.id} item={item} index={index} moveCard={moveCard} />\n  ));\n\n  return connectDropTarget(\n    <div className=\"column\" tabIndex=\"9\">\n      <div style={{ maxWidth: 325 }} key={column.id}>\n        <div className=\"column__panel\">\n          <div className=\"column__panel__header\">\n            <span className=\"column__panel__label\">\n              <span className=\"column__panel__label--text\">\n                {column.items.length}\n              </span>\n            </span>{\" \"}\n            {column.name}\n          </div>\n          <div className=\"column__panel--left\">\n            <div className=\"icon\" onClick={() => toggleAddCardInput(column.id)}>\n              +\n            </div>\n            <div className=\"icon\" onClick={() => removeColumn(column.id)}>\n              ···\n            </div>\n          </div>\n        </div>\n        <div style={{ minHeight: 500 }}>\n          {column.showAddCardInput && <AddNoteForm column={column} />}\n          {items}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst boardTarget = {\n  drop(props, monitor) {\n    const item = monitor.getItem();\n    const { dispatch } = props;\n\n    if (item.columnId !== props.column.id) {\n      dispatch(\n        removeItemFromColumn({\n          columnId: item.columnId,\n          itemId: item.id,\n          transfer: true\n        })\n      );\n      dispatch(\n        addItemToColum({\n          ...item,\n          columnId: props.column.id,\n          transfer: true\n        })\n      );\n    }\n    return {\n      column: props.column\n    };\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver()\n  };\n}\n\nexport default DropTarget(\"Card\", boardTarget, collect)(Column);\n","import React from \"react\";\nimport { addColumn as addColumnAction } from \"../../store/actions/board.actions\";\nimport boardReducer, {\n  state as initialState\n} from \"../../store/reducers/board.reducers\";\nimport { useLocalStorageReducer } from \"../../hooks/useLocalStorageReducer\";\nimport { BoardDispatch } from \"../../BoardDispatchContext\";\nimport Column from \"../Column/Column\";\n\nimport \"./Board.css\";\n\nfunction Board() {\n  const [board, dispatch] = useLocalStorageReducer(\n    \"boardState\",\n    boardReducer,\n    initialState\n  );\n\n  const addColumn = () => {\n    dispatch(addColumnAction(\"random stuff\"));\n  };\n\n  const cols = board.columns.map(column => (\n    <Column key={column.id} dispatch={dispatch} column={column} />\n  ));\n\n  return (\n    <BoardDispatch.Provider value={dispatch}>\n      <div className=\"board-container\">\n        {cols}\n        <div className=\"column column--dashed\">\n          <div className=\"column__placeholder\">\n            <button\n              className=\"button button--primary button--bold\"\n              onClick={addColumn}\n            >\n              + Add column\n            </button>\n          </div>\n        </div>\n      </div>\n    </BoardDispatch.Provider>\n  );\n}\n\nexport default Board;\n","import { useEffect, useReducer } from \"react\";\n\nexport function useLocalStorageReducer(key, reducer, state) {\n  let localStorageState;\n\n  if (key) {\n    localStorageState =\n      (localStorage[key] && JSON.parse(localStorage[key])) || state;\n  } else {\n    localStorageState = state;\n  }\n\n  const [reducerState, dispatch] = useReducer(reducer, localStorageState);\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(reducerState));\n  }, [reducerState]);\n\n  return [reducerState, dispatch];\n}\n","import React, { Component } from \"react\";\nimport Board from \"./components/Board/Board\";\nimport { DragDropContext } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div style={{ padding: 12 }}>\n        <Board />\n      </div>\n    );\n  }\n}\n\nexport default DragDropContext(HTML5Backend)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nimport \"./index.css\";\n\nrender(<App />, document.getElementById(\"root\"));\n\nregisterServiceWorker();\n"],"sourceRoot":""}